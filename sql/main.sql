SET SQL DIALECT 3;

/* CREATE DATABASE '127.0.0.1/gds_db:X:\db\Home_Base.ib' USER 'SYSDBA' password 'Enter_Password_here' PAGE_SIZE 16384
 DEFAULT CHARACTER SET WIN1251; */
COMMIT;
/*CONNECT '127.0.0.1/gds_db:X:\db\Home_Base.ib' USER 'SYSDSO' PASSWORD 'Enter_Password_here'; */
/* ALTER DATABASE SET SYSTEM ENCRYPTION PASSWORD 'Enter_Password_here';*/
COMMIT;
/*CONNECT '127.0.0.1/gds_db:X:\db\Home_Base.ib' USER 'SYSDBA' PASSWORD 'Enter_Password_here'; */

/* Table: COUNTRY, Owner: SYSDBA */
/* Страны */
CREATE TABLE COUNTRY 
(
        CID	INTEGER NOT NULL,
        NAME	VARCHAR(100),
CONSTRAINT PK_COUNTRY PRIMARY KEY (CID)
);

/* Table: FILM, Owner: SYSDBA */
CREATE TABLE FILM 
(
        FID	INTEGER NOT NULL,
        CID	INTEGER,
        GID	INTEGER,
        NAME	VARCHAR(100),
        AGELIMIT	INTEGER,
        START_DATE	DATE,
        END_DATE	DATE,
        TIMING	INTEGER,
        "DESCRIPTION"	VARCHAR(500),
        IMAGE_NAME	VARCHAR(100),
CONSTRAINT PK_FILM PRIMARY KEY (FID)
);

/* Table: GENRE, Owner: SYSDBA */
/* Жанр */
CREATE TABLE GENRE 
(
        GID	INTEGER NOT NULL,
        NAME	VARCHAR(50),
CONSTRAINT PK_GENRE PRIMARY KEY (GID)
);

/* Table: HALL, Owner: SYSDBA */
CREATE TABLE HALL 
(
        HID	INTEGER NOT NULL,
        NAME	VARCHAR(100),
        "DESCRIPTION"	VARCHAR(200),
        ROW_COUNT	INTEGER,
        COL_COUNT	INTEGER,
CONSTRAINT PK_HALL PRIMARY KEY (HID)
);

/* Table: PEOPLE, Owner: SYSDBA */
CREATE TABLE PEOPLE 
(
        PID	INTEGER NOT NULL,
        CID	INTEGER,
        NAME	VARCHAR(100),
CONSTRAINT PK_PEOPLE PRIMARY KEY (PID)
);

/* Table: PLACE, Owner: SYSDBA */
CREATE TABLE PLACE 
(
        PLID	INTEGER NOT NULL,
        HID	INTEGER,
        PLROW	INTEGER,
        PLCOL	INTEGER,
        LENGTHPLACE	INTEGER,
CONSTRAINT PK_PLACE PRIMARY KEY (PLID)
);

/* Table: SESSION, Owner: SYSDBA */
CREATE TABLE SESSION 
(
        SID	INTEGER NOT NULL,
        FID	INTEGER,
        HID	INTEGER,
        STIME	TIME,
        SDATE	DATE,
        PRICE	FLOAT,
CONSTRAINT PK_SESSION PRIMARY KEY (SID)
);

/* Table: TICKETS, Owner: SYSDBA */
CREATE TABLE TICKETS 
(
        TID	INTEGER NOT NULL,
        SID	INTEGER,
        PLID	INTEGER,
CONSTRAINT PK_TICKETS PRIMARY KEY (TID)
);

/* Table: TYPEPEOPLE, Owner: SYSDBA */
CREATE TABLE TYPEPEOPLE 
(
        TPID	INTEGER NOT NULL,
        NAME	VARCHAR(50),
CONSTRAINT PK_TYPEPEOPLE PRIMARY KEY (TPID)
);

/* Table: WORKSPEOPLE, Owner: SYSDBA */
CREATE TABLE WORKSPEOPLE 
(
        WPID	INTEGER NOT NULL,
        FID	INTEGER,
        PID	INTEGER,
        TPID	INTEGER,
CONSTRAINT PK_WORKSPEOPLE PRIMARY KEY (WPID)
);
ALTER TABLE FILM ADD CONSTRAINT FK_FILM_2 FOREIGN KEY (CID) REFERENCES COUNTRY (CID);
ALTER TABLE FILM ADD CONSTRAINT FK_FILM_3 FOREIGN KEY (GID) REFERENCES GENRE (GID);
ALTER TABLE PEOPLE ADD CONSTRAINT FK_PEOPLE_3 FOREIGN KEY (CID) REFERENCES COUNTRY (CID);
ALTER TABLE PLACE ADD CONSTRAINT FK_PLACE_2 FOREIGN KEY (HID) REFERENCES HALL (HID);
ALTER TABLE SESSION ADD CONSTRAINT FK_SESSION_2 FOREIGN KEY (FID) REFERENCES FILM (FID);
ALTER TABLE SESSION ADD CONSTRAINT FK_SESSION_3 FOREIGN KEY (HID) REFERENCES HALL (HID);
ALTER TABLE TICKETS ADD CONSTRAINT FK_TICKETS_1 FOREIGN KEY (SID) REFERENCES SESSION (SID);
ALTER TABLE TICKETS ADD CONSTRAINT FK_TICKETS_3 FOREIGN KEY (PLID) REFERENCES PLACE (PLID);
ALTER TABLE WORKSPEOPLE ADD CONSTRAINT FK_WORKSPEOPLE_2 FOREIGN KEY (FID) REFERENCES FILM (FID);
ALTER TABLE WORKSPEOPLE ADD CONSTRAINT FK_WORKSPEOPLE_3 FOREIGN KEY (PID) REFERENCES PEOPLE (PID);
ALTER TABLE WORKSPEOPLE ADD CONSTRAINT FK_WORKSPEOPLE_4 FOREIGN KEY (TPID) REFERENCES TYPEPEOPLE (TPID);

CREATE GENERATOR GEN_COUNTRY_ID;
CREATE GENERATOR GEN_FILM_ID;
CREATE GENERATOR GEN_GENRE_ID;
CREATE GENERATOR GEN_HALL_ID;
CREATE GENERATOR GEN_PEOPLE_ID;
CREATE GENERATOR GEN_PLACE_ID;
CREATE GENERATOR GEN_SESSION_ID;
CREATE GENERATOR GEN_TICKETS_ID;
CREATE GENERATOR GEN_TYPEPEOPLE_ID;
CREATE GENERATOR GEN_WORKSPEOPLE_ID;
/* Subscriptions */
SET AUTODDL OFF;
SET AUTODDL ON;
COMMIT;
COMMIT WORK;

/* Stored procedures */

COMMIT WORK;

/* Triggers only will work for SQL triggers */

CREATE TRIGGER COUNTRY_BI FOR COUNTRY 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.CID IS NULL) THEN
    NEW.CID = GEN_ID(GEN_COUNTRY_ID,1);
END
 ;

CREATE TRIGGER FILM_BI FOR FILM 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.FID IS NULL) THEN
    NEW.FID = GEN_ID(GEN_FILM_ID,1);
END
 ;

CREATE TRIGGER GENRE_BI FOR GENRE 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.GID IS NULL) THEN
    NEW.GID = GEN_ID(GEN_GENRE_ID,1);
END
 ;

CREATE TRIGGER HALL_BI FOR HALL 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HID IS NULL) THEN
    NEW.HID = GEN_ID(GEN_HALL_ID,1);
END
 ;

CREATE TRIGGER PEOPLE_BI FOR PEOPLE 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.PID IS NULL) THEN
    NEW.PID = GEN_ID(GEN_PEOPLE_ID,1);
END
 ;

CREATE TRIGGER PLACE_BI FOR PLACE 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.PLID IS NULL) THEN
    NEW.PLID = GEN_ID(GEN_PLACE_ID,1);
END
 ;

CREATE TRIGGER SESSION_BI FOR SESSION 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.SID IS NULL) THEN
    NEW.SID = GEN_ID(GEN_SESSION_ID,1);
END
 ;

CREATE TRIGGER TICKETS_BI FOR TICKETS 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.TID IS NULL) THEN
    NEW.TID = GEN_ID(GEN_TICKETS_ID,1);
END
 ;

CREATE TRIGGER TYPEPEOPLE_BI FOR TYPEPEOPLE 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.TPID IS NULL) THEN
    NEW.TPID = GEN_ID(GEN_TYPEPEOPLE_ID,1);
END
 ;

CREATE TRIGGER WORKSPEOPLE_BI FOR WORKSPEOPLE 
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.WPID IS NULL) THEN
    NEW.WPID = GEN_ID(GEN_WORKSPEOPLE_ID,1);
END
 ;

COMMIT WORK ;

/* Grant Roles for this database */


/* Role: "ADMIN", Owner: SYSDBA */
CREATE ROLE "ADMIN";

/* Grant permissions for this database */

GRANT "ADMIN" TO HOME;

GRANT "ADMIN" TO PUBLIC;

GRANT "ADMIN" TO SYSDSO;


/* Meta data descriptions.  This syntax requires InterBase 2020 or higher.  Some tables require ODS18 and higher */

ALTER DESCRIPTION FOR TABLE COUNTRY SET 'Страны
';
ALTER DESCRIPTION FOR TABLE GENRE SET 'Жанр';
